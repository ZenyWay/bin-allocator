(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";var src_1=require("../../src"),randombins_1=require("randombins"),debug=require("debug"),log=debug("example:");debug.enable("example:");var getRandomBins=randombins_1.default({size:16,randomshuffle:function(e){return e}}),alphabet="-abcdefghijklmnopqrstuvw_";getRandomBins([alphabet,alphabet]).then(function(e){var n=src_1.default(e);log("number of bins:",n.length),log("delimitor strings:",n.map(function(e){return e}));var r=["this","is","an","example"],a=r.map(function(e){return n.indexOf(e)});log("indexes of bins for words %o: %o",r,a)});
},{"../../src":2,"debug":undefined,"randombins":undefined}],2:[function(require,module,exports){
"use strict";function defaultCompare(t,r){return t===r?0:t<r?-1:1}function min(t,r){return t<r?t:r}function findIndex(t,r,e,n,i){var o=i-n+1;if(1===o)return i;var a=n+(o>>>1),s=t[a],l=r(e,s);return l?l<0?findIndex(t,r,e,n,a-1):findIndex(t,r,e,a,i):a}function isFunction(t){return"function"==typeof t}var BinAllocatorClass=function(){function t(t,r){this.compare=t,this.delimitors=r}return t.prototype.indexOf=function(t,r){var e=this.delimitors.length-1,n=Math.floor(r)||0,i=n<0?min(this.delimitors.length+n,0):n;return i>e||this.compare(t,this.delimitors[0])<0?-1:findIndex(this.delimitors,this.compare,t,i,e)},t.prototype.map=function(t){return this.delimitors.map(t)},Object.defineProperty(t.prototype,"length",{get:function(){return this.delimitors.length},enumerable:!0,configurable:!0}),t}();BinAllocatorClass.getInstance=function(t,r){if(!Array.isArray(t))throw new TypeError("invalid argument");var e=r&&isFunction(r.compare)?r.compare:defaultCompare;return new BinAllocatorClass(e,t.sort(e))};var getBinArray=BinAllocatorClass.getInstance;Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=getBinArray;
},{}]},{},[1]);
