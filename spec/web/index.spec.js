(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";var src_1=require("../src");describe("getBinAllocator <V>(arr: V[], opts?: Partial<BinAllocatorSpec>): BinAllocator<V>",function(){describe("when called with an Array",function(){var e,n;beforeEach(function(){e=["foo","bar"],n=src_1.default(e).map(function(e){return e})}),it("returns an instance of BinAllocator that wraps the given array",function(){expect(n).toEqual(e)})}),describe("when called with anything else than an Array",function(){var e;beforeEach(function(){e=[null,void 0,!0,42,"foo",function(){return"foo"},{foo:"bar"}]}),it('throws an "invalid argument" TypeError',function(){e.forEach(function(e){return expect(function(){return src_1.default(e)}).toThrowError(TypeError,"invalid argument")})})}),describe("when called with an additional options argument { compare <V>(a: V, b: V): number }",function(){var e;beforeEach(function(){e=jasmine.createSpy("compare").and.returnValue(-1);var n=src_1.default([1,2,3],{compare:e});e.calls.reset(),n.indexOf(5)}),it("substitutes the default comparison function for the `indexOf` method with the one provided",function(){expect(e).toHaveBeenCalledTimes(1)})})}),describe("BinAllocator",function(){describe("readonly length: number",function(){it("returns the length of the underlying array",function(){expect(src_1.default([1,2,3]).length).toBe(3)})}),describe("map <T>(cast: (value: V, index?: number, array?: V[]) => T): T[]",function(){var e,n,r;beforeEach(function(){e=[1,2,3],spyOn(e,"map").and.callThrough();var t=src_1.default(e);n=function(e,n){return[n,e]},r=t.map(n)}),it("delegates to the map method of the underlying Array",function(){expect(e.map).toHaveBeenCalledWith(n),expect(r).toEqual([[0,1],[1,2],[2,3]])})}),describe("indexOf (value: V, fromIndex?: number): number",function(){describe("when called with a value",function(){var e;beforeEach(function(){var n=src_1.default([10,20,30]),r=[-1,9,10,11,18,19,20,21,25,29,30,31,99];e=r.map(function(e){return n.indexOf(e)})}),it("returns the index of the nearest lower value in the underlying Array, or -1 if none lower",function(){expect(e).toEqual([-1,-1,0,0,0,0,1,1,1,1,2,2,2])})})})});
},{"../src":2}],2:[function(require,module,exports){
"use strict";function defaultCompare(t,r){return t===r?0:t<r?-1:1}function min(t,r){return t<r?t:r}function findIndex(t,r,e,n,i){var o=i-n+1;if(1===o)return i;var a=n+(o>>>1),s=t[a],l=r(e,s);return l?l<0?findIndex(t,r,e,n,a-1):findIndex(t,r,e,a,i):a}function isFunction(t){return"function"==typeof t}var BinAllocatorClass=function(){function t(t,r){this.compare=t,this.delimitors=r}return t.prototype.indexOf=function(t,r){var e=this.delimitors.length-1,n=Math.floor(r)||0,i=n<0?min(this.delimitors.length+n,0):n;return i>e||this.compare(t,this.delimitors[0])<0?-1:findIndex(this.delimitors,this.compare,t,i,e)},t.prototype.map=function(t){return this.delimitors.map(t)},Object.defineProperty(t.prototype,"length",{get:function(){return this.delimitors.length},enumerable:!0,configurable:!0}),t}();BinAllocatorClass.getInstance=function(t,r){if(!Array.isArray(t))throw new TypeError("invalid argument");var e=r&&isFunction(r.compare)?r.compare:defaultCompare;return new BinAllocatorClass(e,t.sort(e))};var getBinArray=BinAllocatorClass.getInstance;Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=getBinArray;
},{}]},{},[1]);
